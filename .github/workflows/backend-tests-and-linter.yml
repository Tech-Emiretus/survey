name: Backend Tests and Linter

on:
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  Tests:
    runs-on: [ubuntu-latest]

    env:
      DB_DATABASE: survey_test
      DB_USERNAME: root
      DB_PASSWORD: password

    steps:
      - name: Start MySQL
        run: |
          sudo /etc/init.d/mysql start
          mysql -e "CREATE DATABASE IF NOT EXISTS $DB_DATABASE;" -u$DB_USERNAME -p$DB_PASSWORD

      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4
          extensions: pdo_sqlite, mysql, gd
        env:
          runner: self-hosted

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Setup cache
        uses: pat-s/always-upload-cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use the hash of composer.json as the key for your cache if you do not commit composer.lock.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist

      - name: Generate key
        run: php artisan key:generate

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DB_CONNECTION: mysql
          DB_PORT: 3306
          DB_DATABASE: ${{ env.DB_DATABASE }}
          DB_USERNAME: ${{ env.DB_USERNAME }}
          DB_HOST: 127.0.0.1
          DB_PASSWORD: ${{ env.DB_PASSWORD }}
        run: php artisan test

      - name: Lint code with PHPCS
        run: composer lint-code
